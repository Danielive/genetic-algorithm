N=100; % мощность попул€ции
% двоичный вектор дл€ кодировани€ вещественного решени€ должен иметь 14 бит
% т.к. 9500=9.5*1000 => 8192<9500<16384 => 2^13<9500<2^14
a=randi([0 2^14],1,N); % попул€ци€ - матрица 1x100 из случайных целых чисел в диапазоне от 0 до 2^14
xp=linspace(0.5,10,1000);
for i=1:1000
    Fp(i)=sin(xp(i))/(1+exp(-xp(i))); % получение значений дл€ построени€ графика
end
plot(xp,Fp) % построение графика
ylim([-2 2]); % определение границ графика по оси y
hold on;
for n=1:1000
    point=1;
    % фитнес-функци€ определ€юща€ меру близости к оптимальному решению
    for i=1:N
        x(i)=0.5+a(i)*(9.5)/(2^14);
        F(i)=sin(x(i))/(1+exp(-x(i)));
        if(F(i)<max(Fp)) % оценка особей в попул€ции
           point=0;
        end
    end
    if(point==1) % критерий останова работы алгоритма 
        plot(x,F,'*') % построение точки на графике
        fprintf('ќптимум функции %f\n', F(i));
        fprintf('„исло поколений (генераций) равно %i\n', n);
        break;
    elseif(n==1000 && point~=1)
        plot(x,F,'*') % построение точки на графике
        fprintf('ќптимум функции %f\n', max(F));
        fprintf('„исло поколений (генераций) равно %i\n', n);
    end
    % операци€ репродукции
    Fn=F-min(F); % хромосомы копируютс€ в промежуточную попул€цию дл€ дальнейшего "размножени€"
    M=Fn/mean(F); % число копий хромосом, переход€щих в следующее поколение
    M=round(Fn/mean(mean(Fn))); % округление до целого числа
    k=1;
    for i=1:N
        for r=1:M(i)
            an(k)=a(i); % создание новой попул€ции хромосом
            k=k+1;
        end
    end
    a=an; % инициализаци€ новой попул€ции хромосом
    b=dec2bin(a,14); % перевод дес€тичного представлени€ чисел двоичное
    % операци€ кроссинговера
    j=0;
    for i=1:2:N
        pc=randi([0,1]);
        if (pc==1)
            k=randi([1,14]); % определение бита
            j=b(i,k:14);
            b(i,k:14)=b(i+1,k:14);
            b(i+1,k:14)=j;
        end
    end
    % операци€ мутации
    for i=1:1:N
        pm=randi([0,100]);
        if (pm==1)
            k=randi([1,14]); % определение бита
            if (b(i,k)=='0')
                b(i,k)='1';
            else
                b(i,k)='0';
            end
        end
    end
    a=bin2dec(b); % перевод двоичного представлени€ чисел в дес€тичное
end